package com.effort.sqls;

public class Sqls {
	
	
	public static final String SELECT_EMPLOYEE_BY_ID = "SELECT `Employees`.`empId`,`Employees`.`designation`,`Employees`.`rank`,a.authority,`skillEntityIds`,`empFormId`, `Employees`.`companyId`, `calendarId`, `empNo`, `empFirstName`, `empLastName`, `empTypeId`, `empPhone`, `empAddressStreet`, `empAddressArea`, `empAddressCity`, `empAddressDistrict`, `empAddressPincode`, `empAddressLandMark`, `empAddressState`, `empAddressCountry`, `empEmail`, `imei`, `homeLat`, `homeLong`, `workLat`, `workLong`, `managerId`,`lastLoginTime`,`canOverRideMaxJsonLimit`, IF(`Provisionings`.`code` IS NULL, 0, 1) AS `provisioning`, `Employees`.`createTime`, `Employees`.`modifyTime`, `Employees`.`manager`, `Employees`.`status`,tz.timeZoneDisplayName,IF(`users`.`username` IS NULL, 0,1) AS `createWebUser`,`Employees`.timezoneId,-(tz.timezoneOffset) as timezoneOffset,`Employees`.appId,`Employees`.empMediaId,`Employees`.empBranchEntityId, `Employees`.`empIsdCode`,`Employees`.`adUser`,`Employees`.`adUsername`,`Employees`.`adServerCode`, `Employees`.`encryptionKey`,`Employees`.mapToSettingModifiedTime, `Employees`.keepSessionAlive,`Employees`.blockedByOpsForSendingCustomerToOfflineUse,`Employees`.adNameId,`Employees`.createTime As createdTime,`employeeCreatedBy`,`employeeModifiedBy`, `EmployeesAutoBlockedAndDisabled`.`blocked`, `EmployeesAutoBlockedAndDisabled`.`disabled`,`generateQrCode`,`sourceOfAction`,`sourceOfModification`,`empJoiningDate`,`empProhibitionPeriod`,`expiryDate`,`notifyBefore`,`notifyToEmails`, `isExpired`,employeeMentType,blockMobileActivities,stopPushNotificationsAfterWorkingHours  FROM `Employees` Join Timezones as tz on (tz.`timezoneId`= `Employees`.timezoneId) LEFT JOIN `Provisionings` ON (`Employees`.`empId` = `Provisionings`.`empId`) LEFT JOIN `users` ON (`Employees`.`empId` = `users`.`empId`) LEFT JOIN authorities a ON a.username = `users`.userName LEFT JOIN `EmployeesAutoBlockedAndDisabled` ON  (`EmployeesAutoBlockedAndDisabled`.`empId`= `Employees`.`empId` AND `EmployeesAutoBlockedAndDisabled`.`deleted` = 0 ) WHERE `Employees`.`empId` = ?";
	public static final String SELECT_DEFAULT_EMPLOYEE_CUSTOM_ENTITY_SPEC_SETTINGS = "SELECT `id`, `companyId`, `empId`, `customEntitySpecId`, `key`, `value`, `modifiedDate` FROM `EmployeeCustomEntitySpecSettings` WHERE `companyId` = -1 AND `empId` = -1 AND `customEntitySpecId` = -1";
	public static final String SELECT_EMPLOYEE_CUSTOM_ENTITY_SPEC_SETTINGS_BY_COMPANY_ID_AND_EMP_ID = "SELECT `id`, `companyId`, `empId`, `customEntitySpecId`, `key`, `value`, `modifiedDate` FROM `EmployeeCustomEntitySpecSettings` WHERE `companyId` = ? AND `empId` = ?";
	public static final String SELECT_CLIENT_IDS_FOR_CUSTOM_ENTITIES = "SELECT `customEntityId` as id,`clientSideId` FROM `CustomEntities` WHERE `clientSideId` IN (:clientSideIds) AND `clientCode` = :clientCode ";
	public static final String INSERT_CUSTOM_ENTITIY = "INSERT INTO `CustomEntities`(`customEntityNo`, `customEntityName`,customEntityLocation, `customEntitySpecId`, `createdBy`, `modifiedBy`, `formId`, `companyId`, `createdTime`, `modifiedTime`, `clientSideId`, `clientCode`, `parentCustomEntityId`, `assignTo`,`lastActivityName`,`lastActivityTime`,`customEntityFieldsUniqueKey`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String SELECT_CUSTOM_ENTITY_SPEC_BY_CUSTOM_ENTITY_SPEC_ID = "SELECT `customEntitySpecId`, `title`, `description`, `formSpecUniqueId`, `createdBy`, `modifiedBy`, `createdTime`, `modifiedTime`, `companyId`, `isSystemDefined`, `purpose`, `allAccess`, `deleted`, `copiedFrom`, `skeletonCustomEntitySpecId`, `externalCustomEntitySpecId`, `mobileLayout`, `removeBlankLines`, `enableCustomEntityCheckIn`, `dayPlanAllowd`,`customEntityEmpMappingType`,`enableOnlineSearchForUniqueness`,`canModifyCustomEntity`,`errorMessageForUniqueness`,`successMessageForUniqueness`,enableOCRCheckIn,aliasName,`enableSelfieWhileCheckIn`,`enableSelfieWhileCheckOut`,`enableAutoWorkCreation`, `enableDynamicCustomImport` FROM `CustomEntitySpecs` WHERE `customEntitySpecId` = ? AND `companyId` = ?"; 
	public static final String INSERT_INTO_EMP_MASTER_MAPPING_STATUS = "INSERT INTO `EmpMasterMappingStatus`(`companyId`, `triggerEventType`, `masterId`, `empMasterMappingConfigurationId`, `eventPerformedBy`, `eventCapturedTime`) VALUES (?,?,?,?,?,?)";
	public static final String SELECT_CUSTOM_ENTITY_BY_CUSTOM_ENTITY_ID = "SELECT `customEntityId`, `customEntityNo`,`customEntityName`,customEntityLocation, `customEntitySpecId`, `createdBy`, `modifiedBy`, `formId`, `companyId`, `createdTime`, `modifiedTime`, `clientSideId`, `clientCode`, `parentCustomEntityId`, `parentCustomEntityActionSpecId`, `assignTo`, `deleted`,contactEmailId,`lastActivityName`,`lastActivityTime` FROM `CustomEntities` WHERE `customEntityId` = ?";
	public static final String UPDATE_CUSTOM_ENTITY = "UPDATE `CustomEntities` SET customEntityNo = ?,customEntityName=?,customEntityLocation=?,clientSideId=?,clientCode=?,parentCustomEntityId=?,`modifiedBy`=?,`modifiedTime`=?,assignTo=?,lastActivityName=?,lastActivityTime=?,`customEntityFieldsUniqueKey`=?,`formId`=?  WHERE `customEntityId`=?";
	public static final String INSERT_OR_UPDATE_EMPLOYEE_CUSTOM_ENTITY_MAPPING_FOR_EMP = "INSERT INTO `EmployeeCustomEntityMapping`(`empId`, `customEntitySpecId`, `customEntityId`, `modifiedTime`) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE `deleted` = 0, `modifiedTime` = ?";
	public static final String AUDIT_CUSTOM_ENTITIES = "INSERT INTO `CustomEntitiesAuditLog`(`auditParent`, `customEntityId`, `customEntityNo`, `customEntityName`, `customEntityLocation`, `customEntitySpecId`, `createdBy`, `modifiedBy`, `formId`, `companyId`, `createdTime`, `modifiedTime`, `clientSideId`, `clientCode`, `parentCustomEntityId`, `parentCustomEntityActionSpecId`, `assignTo`, `deleted`, `auditBy`, `auditAt`, `ipAddress`, `contactEmailId`, `lastActivityName`, `lastActivityTime`,`oppUserName`) SELECT ?,`customEntityId`, `customEntityNo`, `customEntityName`, `customEntityLocation`, `customEntitySpecId`, `createdBy`, `modifiedBy`, `formId`, `companyId`, `createdTime`, `modifiedTime`, `clientSideId`, `clientCode`, `parentCustomEntityId`, `parentCustomEntityActionSpecId`, `assignTo`, `deleted`,?,?,?, `contactEmailId`, `lastActivityName`, `lastActivityTime`,? FROM `CustomEntities` WHERE customEntityId = ?";

	
	
	
	
	
	
	
	
	
	
	
	
	
}
